/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

buildscript {
    ext {
        
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"
    }
}
plugins {
    id 'java-library'
    id 'jacoco'
}

apply plugin: "org.sonarqube"
apply plugin: "jacoco"

repositories {
    jcenter()
}

dependencies {

    implementation 'com.google.guava:guava:28.2-jre'
    
    compile "com.google.code.gson:gson:2.8.6"
    compile 'org.springframework.cloud:spring-cloud-function-adapter-aws:2.0.0.RELEASE'
    compile group: 'org.apache.maven.plugins', name: 'maven-shade-plugin', version: '3.2.1'
    compile 'org.slf4j:slf4j-log4j12:1.7.5'
    compile 'com.amazonaws:aws-lambda-java-events:2.2.5'
    compile 'com.amazonaws:aws-lambda-java-core:1.2.0'
    compile 'org.projectlombok:lombok:1.18.10'
   	implementation 'redis.clients:jedis:3.5.1'
   	implementation 'org.springframework.data:spring-data-redis:2.4.2'
    
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    
    implementation 'com.amazonaws:aws-java-sdk-sqs:1.11.835'
	
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.springframework.data:spring-data-redis:2.4.2'
    testImplementation 'redis.clients:jedis:2.7.7'
    testCompile 'org.springframework.data:spring-data-redis:2.4.2'
    testCompile 'redis.clients:jedis:2.9.0'
    testCompile 'org.apache.dubbo:dubbo-registry-redis:2.7.7'
    
    testCompile 'org.mockito:mockito-core:2.21.0]}'
    testCompile 'org.powermock:powermock-api-mockito2:2.0.0'
    testCompile 'org.powermock:powermock-module-junit4:2.0.0'
    testCompile 'org.springframework:spring-test:2.5'
}

sonarqube {
    properties {
	    property "sonar.language" , "java"
	    property "sonar.exclusions", "**/exception/**, **/model/**, **/constants/**"
	    property "sonar.projectName", "detector-gen-mutante"
		property "sonar.projectKey", "detector-gen-mutante"
	    property "sonar.host.url", "$sonarURL"
	    property "sonar.login", "$sonarToken"
   }
}

jacoco {
    toolVersion = "0.8.6"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.enabled true
       html.destination file("${buildDir}/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            excludes = [
                    '*/model/*'
            ]
            limit {
                minimum = 0.50
            }
        }
    }
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

jacocoTestCoverageVerification.dependsOn jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

build.dependsOn buildZip
